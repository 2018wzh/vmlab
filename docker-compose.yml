version: '3.8'

services:
  # PostgreSQL数据库
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: vmlab
      POSTGRES_USER: vmlab
      POSTGRES_PASSWORD: vmlab_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vmlab -d vmlab"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (用于缓存和会话)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django后端
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    environment:
      - DEBUG=0
      - SECRET_KEY=your-secret-key-here
      - DATABASE_URL=postgresql://vmlab:vmlab_password@db:5432/vmlab
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,frontend
      - CORS_ALLOWED_ORIGINS=http://localhost,http://127.0.0.1
    volumes:
      - ./logs:/app/logs
      - ./media:/app/media
      - /var/run/libvirt/libvirt-sock:/var/run/libvirt/libvirt-sock
      - /var/lib/libvirt/images:/var/lib/libvirt/images
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    privileged: true  # 需要访问libvirt

  # Nginx 反向代理，提供静态文件并转发API请求给后端
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs:/app/logs:ro
      - ./frontend/static:/app/static:ro
      - ./media:/app/media:ro
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_started

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    driver: bridge
